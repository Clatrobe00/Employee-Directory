{"version":3,"sources":["components/utils/API.js","components/utils/DirectoryContext.js","components/utils/SortContext.js","components/utils/FilterContext.js","components/EmployeeTable.js","components/Directory.js","App.js","index.js"],"names":["API","axios","get","DirectoryContext","React","createContext","SortContext","FilterContext","EmployeeTable","searchFilter","useContext","employeeData","sortMethod","console","log","useEffect","filter","employee","name","first","toLowerCase","includes","Table","striped","bordered","hover","sort","a","b","dob","age","registered","map","title","last","cell","email","date","indexOf","mapEmployees","SearchHandler","props","handleChange","e","setState","search","target","value","state","employees","sortBy","this","getEmployees","then","res","results","data","catch","err","Container","Form","Group","controlId","Label","Control","type","onChange","Text","className","Provider","onClick","orderHandler","Component","App","Directory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.266a3c36.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://randomuser.me/api/?results=20';\n\nconst API = () => axios.get(URL);    \n\nexport default API;","import React from 'react';\n\nconst DirectoryContext = React.createContext();\n\nexport default DirectoryContext;","import React from 'react';\n\nconst SortContext = React.createContext();\n\nexport default SortContext;","import React from 'react';\n\nconst FilterContext = React.createContext();\n\nexport default FilterContext;","import React, { useContext, useEffect } from 'react';\nimport { Table } from 'react-bootstrap'\nimport DirectoryContext from './utils/DirectoryContext';\nimport SortContext from './utils/SortContext'\nimport FilterContext from './utils/FilterContext';\n\nconst EmployeeTable = () => {\n\n    const searchFilter = useContext(FilterContext);\n    const employeeData = useContext(DirectoryContext);\n    const sortMethod = useContext(SortContext);\n    console.log('sort method is', sortMethod);\n    let sortedEm;\n\n    const filterEmployees = () => {\n        employeeData.filter(employee => {\n            return employee.name.first.toLowerCase().includes(searchFilter.toLowerCase());\n        })\n    }\n\n    useEffect(() => {\n        const filter = filterEmployees()\n        console.log('filtered array is ', filter)\n    })\n\n    const mapEmployees = () => {\n        switch (sortMethod) {\n            case 'age':\n                sortedEm= employeeData.sort((a,b) => {\n                    return a.dob.age - b.dob.age\n                })\n                break;\n            case 'registered':\n                sortedEm= employeeData.sort((a,b) => {\n                    return a.registered.age - b.registered.age\n                })\n                break\n            default:\n                break;\n        }\n        \n        const emTab = employeeData.map(employee => {\n            return (\n                <tr key={employeeData.indexOf(employee)}>\n                <td>{employee.name.title}</td>\n                <td>{employee.name.first}</td>\n                <td>{employee.name.last}</td>\n                <td>{employee.cell}</td>\n                <td>{employee.email}</td>\n                <td>{employee.dob.age}</td>\n                <td>{employee.registered.date}</td>\n                </tr>\n            )\n\n        })\n        return emTab;\n    }\n\n    return (\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                <th>Title</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Cell</th>\n                <th>Email</th>\n                <th>Age</th>\n                <th>Registered</th>\n                </tr>\n            </thead>\n            <tbody>\n                {(employeeData[0]) ? (mapEmployees(employeeData)) : (                    \n                    <tr>\n                    <td>No Data</td>\n                    <td>No Data</td>\n                    <td>No Data</td>\n                    <td>No Data</td>\n                    <td>No Data</td>\n                    <td>No Data</td>\n                    </tr>\n                )}          \n            </tbody>\n        </Table>\n    )\n}    \n\nexport default EmployeeTable;","import React, { Component, useState } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport API from './utils/API';\nimport EmployeeTable from './EmployeeTable';\nimport DirectoryContext from './utils/DirectoryContext';\nimport SortContext from './utils/SortContext';\nimport FilterContext from './utils/FilterContext';\n\nclass SearchHandler extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      employees: [],\n      sortBy: 'cell',\n      search: 'name',\n    }\n  }\n\n\n    componentDidMount () {\n      this.getEmployees()\n    }\n\n    getEmployees () {\n      API().then(res => {\n        const results = res.data.results;\n        this.setState({ employees: results })\n      })\n      .catch(err => console.log(err));\n    }\n\n    orderHandler (e) {\n      this.setState({ sortBy: e.target.value })\n    }\n\n    handleChange = (e) => {\n      this.setState({ search: e.target.value});\n      console.log('target data is ', e.target.value);\n    }\n\n    // componentDidUpdate () {\n    //   this.getEmployees()\n    // }\n\n    render() {\n        return (\n          <Container>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Search for Employee</Form.Label>\n                  <Form.Control type=\"text\" value={this.state.search} onChange={this.handleChange}/>\n                  <Form.Text className=\"text-muted\">\n                  Just type in the first name of the employee you need.\n                  </Form.Text>\n              </Form.Group>\n        \n            </Form>\n            <DirectoryContext.Provider value={this.state.employees}>\n              <SortContext.Provider value={this.state.sortBy}>\n                <FilterContext.Provider value={this.state.search}>\n                  <h1>{this.state.sortBy}</h1>\n                  <EmployeeTable />\n                </FilterContext.Provider>\n              </SortContext.Provider>\n            </DirectoryContext.Provider>\n            <button value='age' onClick={(e) => this.orderHandler(e)}>Age</button>\n            <button value='registered' onClick={(e) => this.orderHandler(e)}>Registered</button>\n          </Container>\n\n          // <ul>\n          //     Hello\n          //   { this.state.employees.map(employee => <li>Name: {employee.name.first} Age: {employee.dob.age}</li>)}\n          // </ul>\n        )\n      }\n}\n\nexport default SearchHandler;","import './App.css';\nimport Directory from './components/Directory';\n\nfunction App() {\n  return (\n    <>\n      <Directory />\n    </>  \n  );\n}\n\nexport default App;\n\n// create filter to filter employees","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}